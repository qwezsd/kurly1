{"ast":null,"code":"import React from'react';import{HashRouter as BrowserRouter,Routes,Route}from'react-router-dom';import TopModalComponent from'./TopModalComponent';import HeaderComponent from'./HeaderComponent';import MainComponent from'./MainComponent';import GoTopComponent from'./GoTopComponent';import QuickMenuComponent from'./QuickMenuComponent';import FooterComponent from'./FooterComponent';import ConfirmModal from'./ConfirmModal';import AddressComponent from'./AddressComponent';//서브\nimport Sub1Component from'./sub/Sub1Component';import Sub2Component from'./sub/Sub2Component';import Sub3Component from'./sub/Sub3Component';import Sub4Component from'./sub/Sub4Component';import Sub5Component from'./sub/Sub5Component';import Sub6Component from'./sub/Sub6Component';// react-redux \n// import { useDispatch, useSelector } from \"react-redux\"\n// 선언해줌 어떤 선언? 디스패치하고 셀렉터(값을 내보내줌) selector가 true면 모달 뜨고 off면 안 뜨고\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function WrapComponent(){// //리덕스 useDispatch, useSelector 선언\n// const dispatch = useDispatch();\n// const selector = useSelector((state)=>state); //리턴값이 있어야 하니까 화살표 함수를 사용헤사 중괄호 없이 state를 바로 보내줌으로서 리턴문이 발생하게 한다\nconst[state,setState]=React.useState({message:'',isconfirmModal:false,isAddressSearch:false});const[address,setAddress]=React.useState({//이거 안 하면 주소 안 먹음\n주소1:'',주소2:''});//열기\nconst confirmModalOpen=message=>{setState({...state,message:message,isconfirmModal:true});};//닫기\nconst confirmModalClose=()=>{setState({...state,isconfirmModal:false});};// 주소 검색 닫기\nconst addressSearchClose=()=>{setState({...state,isAddressSearch:false});};// 주소 검색 열기\nconst addressSearchOpen=()=>{setState({...state,isAddressSearch:true});};// 주소를 저장해주는 함수\nconst addressSave=(주소1,주소2)=>{setAddress({...address,주소1:주소1,주소2:주소2});};// 새로고침 혹은 로딩시\n// 저장소에서 가져오기\n// 그리고 상태관리자에 저장하기(저장하고 계쏙 유지, 새로고침하면 새롭게 데이터가 들어옴\nReact.useEffect(()=>{const result=JSON.parse(localStorage.getItem('POSTCODE_ADDRESS'));console.log(result);},[address.주소1,address.주소2]);// 저장된 데이터가 있는 경우에만 저장해야하고, 리포구조로 바뀌어야 해서 내용이 살짝 바뀌어야 함\n// 최근 본상품 \nconst[viewProduct,setViewProduct]=React.useState([]);const[product,setProduct]=React.useState([]);const[flag,setFlag]=React.useState(false);// 1. 지금 본 상품 클릭한 데이터 가져오기\nconst currentViewProduct=(item,imgPath)=>{const obj={//키(Key): 값(Value)\n번호:item.번호,상품명:item.상품명,이미지:\"\".concat(imgPath).concat(item.이미지),정가:item.정가,할인율:\"\".concat(Math.round(item.할인율*100),\"%\"),판매가:Math.round(item.정가*(1-item.할인율)),후기:item.후기};setProduct(obj);};// 2.로컬스토레이지에 저장하기\n// 언제? 상태변수 객체(product)에 저장완료되면\n// 저장소에 저장된 데이터가 있는 경우\n// ==> 저장소에 저장된 데이터를 가져온다. => 스택구조 형식으로 현재 데이터를 위에 넣고 저장한다(스택구조) 스택=>후입선출, 쿠 => 선입선출\n//저장소에 저장된 데이터가 없는 경우 => 현재 클릭한 데이터만 저장한다.\nReact.useEffect(()=>{// 1. 임시 배열 생성한다.\nlet imsi=[];// 2. {} 객체 데이터가 있다면\nif(Object.keys(product).length>0){imsi=[product];}// 3. 저장소 데이터가 없다면 => 임시배열에 객체를 넣어서 저장소 저장한다.\nif(localStorage.getItem('KURLY_VIEW_PRODUCT')===null){if(imsi.length>0){localStorage.setItem('KURLY_VIEW_PRODUCT',JSON.stringify(imsi));// [{..}]\n}}// 4. 저장소 데이터가 있다면 => 데이터 가져온다.\n//    =>  가져온 배열 데이터에 현재 클릭한 겍체{} 를 스택구조로 저장한다.\nelse{let result=JSON.parse(localStorage.getItem('KURLY_VIEW_PRODUCT'));// 배열데이터가져오기\n//  중복검사\n//  저장소에 저장된 데이터가 현재 보고있는 상품과 중복되면 저장취소\nlet filterResult=result.map(item=>item.번호===product.번호);// 배열에 참 거짓\n//filterResult = [true, false, false]\nconsole.log(filterResult);if(filterResult.includes(true)){// 중복된 데이터가 있으면 true 있다\nreturn;}else{// 중복안됨\nif(Object.keys(product).length>0){result=[product,...result];// [{...},{..}] 스택\n// 최종 로컬스토레이지에 저장하기\nlocalStorage.setItem('KURLY_VIEW_PRODUCT',JSON.stringify(result));}}}// 깃발 흔든다xb\nsetFlag(!flag);},[product]);// 3. 로컬스토레이지에 데이터가 저장 되면\n// 로컬스토레이지 데이터 가져오기 해서\n// 최상위 컴포넌트의 상태변수 ViewProduct => 퀵메뉴에 바인딩\nReact.useEffect(()=>{if(localStorage.getItem('KURLY_VIEW_PRODUCT')===null){return;}const result=JSON.parse(localStorage.getItem('KURLY_VIEW_PRODUCT'));setViewProduct(result);},[flag]);return/*#__PURE__*/_jsxs(\"div\",{id:\"wrap\",children:[/*#__PURE__*/_jsx(TopModalComponent,{}),/*#__PURE__*/_jsx(BrowserRouter,{basename:process.env.PUBLIC_URL,children:/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsxs(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HeaderComponent,{addressSearchOpen:addressSearchOpen,주소1:address.주소1,주소2:address.주소2}),children:[/*#__PURE__*/_jsx(Route,{index:true,element:/*#__PURE__*/_jsx(MainComponent,{})}),/*#__PURE__*/_jsx(Route,{path:\"/main\",element:/*#__PURE__*/_jsx(MainComponent,{currentViewProduct:currentViewProduct})}),/*#__PURE__*/_jsx(Route,{path:\"/sub1\",element:/*#__PURE__*/_jsx(Sub1Component,{currentViewProduct:currentViewProduct})}),/*#__PURE__*/_jsx(Route,{path:\"/sub2\",element:/*#__PURE__*/_jsx(Sub2Component,{currentViewProduct:currentViewProduct})}),/*#__PURE__*/_jsx(Route,{path:\"/sub3\",element:/*#__PURE__*/_jsx(Sub3Component,{currentViewProduct:currentViewProduct})}),/*#__PURE__*/_jsx(Route,{path:\"/sub4\",element:/*#__PURE__*/_jsx(Sub4Component,{})}),/*#__PURE__*/_jsx(Route,{path:\"/sub5\",element:/*#__PURE__*/_jsx(Sub5Component,{confirmModalOpen:confirmModalOpen,addressSearchOpen:addressSearchOpen,주소1:address.주소1,주소2:address.주소2})}),/*#__PURE__*/_jsx(Route,{path:\"/sub6\",element:/*#__PURE__*/_jsx(Sub6Component,{})})]})})}),state.isconfirmModal&&/*#__PURE__*/_jsx(ConfirmModal,{confirmModalClose:confirmModalClose,message:state.message}),state.isAddressSearch&&/*#__PURE__*/_jsx(AddressComponent,{addressSearchClose:addressSearchClose,addressSearchOpen:addressSearchOpen,addressSave:addressSave}),/*#__PURE__*/_jsx(GoTopComponent,{}),/*#__PURE__*/_jsx(QuickMenuComponent,{viewProduct:viewProduct}),/*#__PURE__*/_jsx(FooterComponent,{})]});};","map":{"version":3,"names":["React","HashRouter","BrowserRouter","Routes","Route","TopModalComponent","HeaderComponent","MainComponent","GoTopComponent","QuickMenuComponent","FooterComponent","ConfirmModal","AddressComponent","Sub1Component","Sub2Component","Sub3Component","Sub4Component","Sub5Component","Sub6Component","jsx","_jsx","jsxs","_jsxs","WrapComponent","state","setState","useState","message","isconfirmModal","isAddressSearch","address","setAddress","주소1","주소2","confirmModalOpen","confirmModalClose","addressSearchClose","addressSearchOpen","addressSave","useEffect","result","JSON","parse","localStorage","getItem","console","log","viewProduct","setViewProduct","product","setProduct","flag","setFlag","currentViewProduct","item","imgPath","obj","번호","상품명","이미지","concat","정가","할인율","Math","round","판매가","후기","imsi","Object","keys","length","setItem","stringify","filterResult","map","includes","id","children","basename","process","env","PUBLIC_URL","path","element","index"],"sources":["/Users/igyeongha/Documents/프론트엔드/kurly/kurly_배포/src/wrap/WrapComponent.jsx"],"sourcesContent":["import React from 'react';\nimport { HashRouter as BrowserRouter, Routes, Route} from 'react-router-dom'\nimport TopModalComponent from './TopModalComponent'\nimport HeaderComponent from './HeaderComponent';\nimport MainComponent from './MainComponent';\nimport GoTopComponent from './GoTopComponent'\nimport QuickMenuComponent from './QuickMenuComponent'\nimport FooterComponent from './FooterComponent';\nimport ConfirmModal from './ConfirmModal';\nimport AddressComponent from './AddressComponent';\n\n//서브\nimport Sub1Component from './sub/Sub1Component';\nimport Sub2Component from './sub/Sub2Component';\nimport Sub3Component from './sub/Sub3Component';\nimport Sub4Component from './sub/Sub4Component';\nimport Sub5Component from './sub/Sub5Component';\nimport Sub6Component from './sub/Sub6Component';\n\n// react-redux \n// import { useDispatch, useSelector } from \"react-redux\"\n// 선언해줌 어떤 선언? 디스패치하고 셀렉터(값을 내보내줌) selector가 true면 모달 뜨고 off면 안 뜨고\nexport default function WrapComponent () {\n    \n    // //리덕스 useDispatch, useSelector 선언\n    // const dispatch = useDispatch();\n    // const selector = useSelector((state)=>state); //리턴값이 있어야 하니까 화살표 함수를 사용헤사 중괄호 없이 state를 바로 보내줌으로서 리턴문이 발생하게 한다\n\n    const [state, setState] = React.useState({\n        message : '',\n        isconfirmModal : false,\n        isAddressSearch : false,\n    });\n    const [address, setAddress] = React.useState({ //이거 안 하면 주소 안 먹음\n        주소1 : '',\n        주소2: ''\n    })\n\n    //열기\n    const confirmModalOpen  =(message)=>{\n        setState({\n            ...state,\n            message: message,\n            isconfirmModal : true\n        })\n    }\n    //닫기\n    const confirmModalClose  =()=>{\n        setState({\n            ...state,\n            isconfirmModal : false\n        })\n    }\n    // 주소 검색 닫기\n    const addressSearchClose=()=>{\n        setState({\n            ...state,\n            isAddressSearch : false\n        })\n    }\n    // 주소 검색 열기\n    const addressSearchOpen=()=>{\n        setState({\n            ...state,\n            isAddressSearch : true\n        })\n    }\n    // 주소를 저장해주는 함수\n    const addressSave = (주소1, 주소2) =>{\n        setAddress({\n            ...address,\n            주소1:주소1,\n            주소2:주소2\n        })\n    }\n    // 새로고침 혹은 로딩시\n    // 저장소에서 가져오기\n    // 그리고 상태관리자에 저장하기(저장하고 계쏙 유지, 새로고침하면 새롭게 데이터가 들어옴\n    React.useEffect(()=>{\n        const result = JSON.parse(localStorage.getItem('POSTCODE_ADDRESS'))\n        console.log(result)\n    }, [address.주소1, address.주소2])\n    \n    // 저장된 데이터가 있는 경우에만 저장해야하고, 리포구조로 바뀌어야 해서 내용이 살짝 바뀌어야 함\n\n    // 최근 본상품 \n    const [viewProduct, setViewProduct] = React.useState([]);\n\n\n    const [product, setProduct] = React.useState([]);\n    const [flag, setFlag] = React.useState(false);\n\n    // 1. 지금 본 상품 클릭한 데이터 가져오기\n    const currentViewProduct=(item, imgPath)=>{       \n        const obj = {  //키(Key): 값(Value)\n            번호: item.번호,\n            상품명: item.상품명,\n            이미지: `${imgPath}${item.이미지}`,\n            정가: item.정가,\n            할인율: `${Math.round(item.할인율 * 100)}%`,\n            판매가: Math.round(item.정가 * (1-item.할인율)),\n            후기: item.후기\n        }\n        setProduct(obj);\n    }\n\n    // 2.로컬스토레이지에 저장하기\n    // 언제? 상태변수 객체(product)에 저장완료되면\n    // 저장소에 저장된 데이터가 있는 경우\n    // ==> 저장소에 저장된 데이터를 가져온다. => 스택구조 형식으로 현재 데이터를 위에 넣고 저장한다(스택구조) 스택=>후입선출, 쿠 => 선입선출\n\n    //저장소에 저장된 데이터가 없는 경우 => 현재 클릭한 데이터만 저장한다.\n\n    React.useEffect(()=>{\n        // 1. 임시 배열 생성한다.\n         let imsi = [];              \n        // 2. {} 객체 데이터가 있다면\n        if(Object.keys(product).length > 0){\n            imsi = [product];\n        }  \n        // 3. 저장소 데이터가 없다면 => 임시배열에 객체를 넣어서 저장소 저장한다.\n        if(localStorage.getItem('KURLY_VIEW_PRODUCT')===null){\n            if(imsi.length>0){\n                localStorage.setItem('KURLY_VIEW_PRODUCT', JSON.stringify(imsi)); // [{..}]\n            }\n        }\n                // 4. 저장소 데이터가 있다면 => 데이터 가져온다.\n                //    =>  가져온 배열 데이터에 현재 클릭한 겍체{} 를 스택구조로 저장한다.\n        else {\n            let result = JSON.parse(localStorage.getItem('KURLY_VIEW_PRODUCT')); // 배열데이터가져오기\n            //  중복검사\n            //  저장소에 저장된 데이터가 현재 보고있는 상품과 중복되면 저장취소\n            let filterResult = result.map((item)=>item.번호===product.번호); // 배열에 참 거짓\n            //filterResult = [true, false, false]\n            console.log( filterResult );            \n            if(filterResult.includes(true)){ // 중복된 데이터가 있으면 true 있다\n                return;\n            }\n            else{ // 중복안됨\n                if(Object.keys(product).length>0){\n                    result=[product, ...result];  // [{...},{..}] 스택\n                    // 최종 로컬스토레이지에 저장하기\n                    localStorage.setItem('KURLY_VIEW_PRODUCT', JSON.stringify(result));\n                }\n            }\n        }\n        // 깃발 흔든다xb\n        setFlag( !flag );\n    },[product]);\n\n    // 3. 로컬스토레이지에 데이터가 저장 되면\n    // 로컬스토레이지 데이터 가져오기 해서\n    // 최상위 컴포넌트의 상태변수 ViewProduct => 퀵메뉴에 바인딩\n\n    React.useEffect(()=>{\n        if(localStorage.getItem('KURLY_VIEW_PRODUCT')=== null){\n            return;\n        }\n        const result = JSON.parse(localStorage.getItem('KURLY_VIEW_PRODUCT'));\n        setViewProduct(result);\n\n    }, [flag])\n    return (\n    <div id='wrap'>\n        <TopModalComponent />\n\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <Routes>\n                    <Route path='/' element={<HeaderComponent addressSearchOpen={addressSearchOpen} 주소1={address.주소1} 주소2={address.주소2}/>}>\n                        <Route index element={<MainComponent />} />\n                        <Route path='/main' element={<MainComponent currentViewProduct={currentViewProduct}/>} />\n                        <Route path='/sub1' element={<Sub1Component currentViewProduct={currentViewProduct} />} />\n                        <Route path='/sub2' element={<Sub2Component currentViewProduct={currentViewProduct} />} />\n                        <Route path='/sub3' element={<Sub3Component currentViewProduct={currentViewProduct} />} />\n                        <Route path='/sub4' element={<Sub4Component />} />\n                        <Route path='/sub5' element={<Sub5Component confirmModalOpen={confirmModalOpen} addressSearchOpen={addressSearchOpen} 주소1={address.주소1} 주소2={address.주소2} />} />\n                        <Route path='/sub6' element={<Sub6Component />} />\n                    </Route>\n                </Routes>\n            </BrowserRouter>\n        {state.isconfirmModal &&\n            <ConfirmModal confirmModalClose={confirmModalClose} message={state.message} />\n        }\n        {state.isAddressSearch &&\n            <AddressComponent addressSearchClose={addressSearchClose} addressSearchOpen={addressSearchOpen} addressSave={addressSave}/>\n        }\n            <GoTopComponent />\n            <QuickMenuComponent viewProduct={viewProduct}/>\n            <FooterComponent />\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}